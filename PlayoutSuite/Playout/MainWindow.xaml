<Window x:Class="Playout.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="http://schemas.microsoft.com/wpf/2008/toolkit" 
        xmlns:ebu="http://schemas.ebu.com/xaml" 
        xmlns:src="clr-namespace:Playout"
        xmlns:srcUI="clr-namespace:Playout.UI"
        Title="EBU PLAYOUT" Name="This" Loaded="This_Loaded" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" Height="768" Width="908" WindowStartupLocation="CenterScreen" WindowState="Maximized" WindowStyle="None">
    <Window.Resources>

        <!--Inlay where banner text sits-->
        <Style x:Key="BannerInlay" TargetType="{x:Type Rectangle}">
            <Setter Property="RadiusX" Value="6" />
            <Setter Property="RadiusY" Value="6" />
            <Setter Property="Fill">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF666868" Offset="0"/>
                        <GradientStop Color="Black" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Stroke">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FF949494" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Text displayed in the banner-->
        <Style x:Key="BannerInlayText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#FF868686" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        
        <src:CellValueColorConverter x:Key="colorConverter"></src:CellValueColorConverter>
        <src:CellStringConverter x:Key="stringConverter" />
        <src:CellTimeConverter x:Key="timeConverter" />
        <src:GapSchedConverter x:Key="gapSchedConverter" />
        <src:RowBackgroundConverter x:Key="rowBackGroundColorConverter" />
        <src:RowForegroundConverter x:Key="rowForeGroundColorConverter" />

        <!--<src:RowForegroundConverter x:Key="rowForeGroundColorConverter" />-->
        <!-- All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Stles that the ScrollViewer has out of the box
         -->

        <!-- Brushes used in Styling of ScrollViewer -->
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
            StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
            StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <LinearGradientBrush x:Key="PressedBrush"
            StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
          Name="Border"
          Margin="1"
          CornerRadius="2"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                            <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
          CornerRadius="2"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
                <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="2"
      Background="#F0F0F0" />
                <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall  ScrollViewer -->
        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="black">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" MaxHeight="50" MinHeight="50" />
            <RowDefinition Height="213*"/>
            <RowDefinition Height="208*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        
        <srcUI:Header LABEL="EBU VISUAL RADIO PRODUCTION PLATFORM" Loaded="Header_Loaded" />
        <Grid Grid.Row="1" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{x:Null}" Margin="0,0,2,-20" StrokeThickness="2" Stroke="#FF00B1FF" Stretch="Fill" RadiusX="20" RadiusY="20" />
            <srcUI:PlayOutFrame x:Name="playoutFrame" Margin="6,38,8,0" />
            <Rectangle Fill="{x:Null}" Margin="10,0,-8,-20" RadiusX="20" RadiusY="20" Stretch="Fill" Stroke="#FF00B1FF" StrokeThickness="2" Grid.Column="1" />
            <srcUI:PicFrame Grid.Column="1" x:Name="contentFrame" Margin="22,6,0,0"/>
            <TextBlock HorizontalAlignment="Left" Margin="6,6,0,0" Style="{StaticResource BannerInlayText}" Text="Audio Playout" Width="394" Height="32" VerticalAlignment="Top" />
        </Grid>
        <Grid Grid.Row="2" Margin="20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50*"/>
                <ColumnDefinition Width="50*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{x:Null}" Margin="0,-8,2,-13" RadiusX="20" RadiusY="20" Stretch="Fill" Stroke="#FF00B1FF" StrokeThickness="2" />
            <DataGrid AutoGenerateColumns="False" Name="loggrid" ItemsSource="{Binding ElementName=This, Path=LogData}" IsSynchronizedWithCurrentItem="True" IsReadOnly="False" UseLayoutRounding="False" MouseDoubleClick="grid_MouseDoubleClick" BeginningEdit="grid_BeginningEdit" DragEnter="grid_DragEnter" Margin="6,27.5,8,0">
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Background">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource rowBackGroundColorConverter}">
                                    <Binding Path="type" />
                                    <Binding Path="slot" />
                                    <Binding Path="slot.status" />
                                    <Binding Path="slot.fillsong" />
                                    <Binding Path="slot.cutsong" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <MultiBinding Converter="{StaticResource rowForeGroundColorConverter}">
                                    <Binding Path="type" />
                                    <Binding Path="slot" />
                                    <Binding Path="slot.status" />
                                    <Binding Path="slot.fillsong" />
                                    <Binding Path="slot.cutsong" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Blue"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                        </Style.Triggers>

                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <!-- STATUS -->
                    <DataGridTemplateColumn Header="Status" MinWidth="100">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Margin="20,0,0,0">
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>

                            <DataTemplate>
                                <StackPanel  Orientation="Horizontal" Margin="20,0,0,0">
                                    <Rectangle Name="rect" Width="10" Height="10">
                                        <Rectangle.Fill>
                                            <MultiBinding Converter="{StaticResource colorConverter}" Mode="TwoWay">
                                                <Binding Path="slot" />
                                                <Binding Path="slot.status" />
                                                <Binding Path="slice" />
                                                <Binding Path="slice.status" />
                                            </MultiBinding>
                                        </Rectangle.Fill>
                                    </Rectangle>

                                    <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource stringConverter}">
                                    <Binding Path="slot" />
                                    <Binding Path="slot.status" />
                                    <Binding Path="slice" />
                                    <Binding Path="slice.status" />
                                    </MultiBinding>
                                </TextBlock.Text>
                                    </TextBlock>

                                </StackPanel>
                            </DataTemplate>

                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>
                    <!-- Air DateTime -->
                    <DataGridTextColumn Header="AirDT">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource timeConverter}">
                                <Binding Path="slot" />
                                <Binding Path="slot.airdatetime" StringFormat="d" />
                                <Binding Path="slice" />
                                <Binding Path="slice.airdatetime" StringFormat="d" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>

                    <!-- GAP/SCHEDULED DATE -->
                    <DataGridTextColumn Header="gap / scheduled">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource gapSchedConverter}">
                                <Binding Path="slice.Previous"/>
                                <Binding Path="slice.Previous.gaptonextslice" />
                                <Binding Path="slice.Previous.airgaptonextslice" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>

                    <!-- Runtime -->
                    <DataGridTextColumn Header="runtime">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource timeConverter}">
                                <Binding Path="slot" />
                                <Binding Path="slot.runtime" />
                                <Binding Path="slice" />
                                <Binding Path="slice.runtime" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>

                    <!-- Label -->
                    <DataGridTextColumn Header="Label">
                        <DataGridTextColumn.Binding>
                            <MultiBinding Converter="{StaticResource stringConverter}">
                                <Binding Path="slot" />
                                <Binding Path="slot.item.label" />
                                <Binding Path="slice" />
                                <Binding Path="slice.label" />
                            </MultiBinding>
                        </DataGridTextColumn.Binding>
                    </DataGridTextColumn>
                    <!-- Type -->
                    <DataGridTextColumn Binding="{Binding type}" Header="Type" />
                    <!-- filename -->
                    <DataGridTextColumn Binding="{Binding filename}" Header="FileName" />
                    <!--<DataGridComboBoxColumn x:Name="_PublisherCombo" Header="Publisher" SelectedItemBinding="{Binding Publisher}" />-->
                    <!-- <DataGridCheckBoxColumn Binding="{Binding On Xbox}" Header="On Xbox 360" />-->
                </DataGrid.Columns>
            </DataGrid>
            <Image Source="/Playout;component/Images/ebu-logo-bn.png" Grid.Column="1" Margin="230,84,0,11" />
            <ListBox Name="errorListBox" Height="152" VerticalAlignment="Bottom" Visibility="Hidden" Grid.ColumnSpan="2" Margin="-20,0,-17,-20" />
            <TextBlock HorizontalAlignment="Left" Style="{StaticResource BannerInlayText}" Text="LogList (Audio &amp; Metadata)" Width="394" Height="36" VerticalAlignment="Top" Margin="6,0,0,0" />
        </Grid>
        
        <StatusBar Grid.Row="2" Padding="0" Name="errorStatus" Grid.RowSpan="2" Height="35" VerticalAlignment="Bottom">
            <StatusBarItem>
                <Label>tech.ebu.ch</Label>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <Label x:Name="error_label">running...</Label>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <Button x:Name="error_btn" Click="error_btn_Click">infos (0)</Button>
            </StatusBarItem>

        </StatusBar>
    </Grid>
</Window>
